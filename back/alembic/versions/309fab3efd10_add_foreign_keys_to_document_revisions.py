"""add_foreign_keys_to_document_revisions

Revision ID: 309fab3efd10
Revises: a7530e20adc5
Create Date: 2025-10-02 10:37:27.284839

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '309fab3efd10'
down_revision: Union[str, None] = 'a7530e20adc5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_transmittal_revisions_id', table_name='transmittal_revisions')
    op.drop_table('transmittal_revisions')
    op.drop_index('ix_uploaded_files_id', table_name='uploaded_files')
    op.drop_index('ix_uploaded_files_path', table_name='uploaded_files')
    op.drop_table('uploaded_files')
    op.drop_index('ix_unique_documents_id', table_name='unique_documents')
    op.drop_table('unique_documents')
    op.add_column('document_revisions', sa.Column('revision_status_id', sa.Integer(), nullable=True))
    op.add_column('document_revisions', sa.Column('revision_description_id', sa.Integer(), nullable=True))
    op.add_column('document_revisions', sa.Column('revision_step_id', sa.Integer(), nullable=True))
    op.add_column('document_revisions', sa.Column('review_code_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'document_revisions', 'revision_statuses', ['revision_status_id'], ['id'])
    op.create_foreign_key(None, 'document_revisions', 'revision_steps', ['revision_step_id'], ['id'])
    op.create_foreign_key(None, 'document_revisions', 'revision_descriptions', ['revision_description_id'], ['id'])
    op.create_foreign_key(None, 'document_revisions', 'review_codes', ['review_code_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'document_revisions', type_='foreignkey')
    op.drop_constraint(None, 'document_revisions', type_='foreignkey')
    op.drop_constraint(None, 'document_revisions', type_='foreignkey')
    op.drop_constraint(None, 'document_revisions', type_='foreignkey')
    op.drop_column('document_revisions', 'review_code_id')
    op.drop_column('document_revisions', 'revision_step_id')
    op.drop_column('document_revisions', 'revision_description_id')
    op.drop_column('document_revisions', 'revision_status_id')
    op.create_table('unique_documents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('number', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=512), autoincrement=False, nullable=False),
    sa.Column('title_native', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('discipline_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('language_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('drs', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('originator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], name='unique_documents_discipline_id_fkey'),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], name='unique_documents_language_id_fkey'),
    sa.ForeignKeyConstraint(['originator_id'], ['originators.id'], name='unique_documents_originator_id_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='unique_documents_project_id_fkey'),
    sa.ForeignKeyConstraint(['type_id'], ['document_types.id'], name='unique_documents_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='unique_documents_pkey'),
    sa.UniqueConstraint('number', name='unique_documents_number_key')
    )
    op.create_index('ix_unique_documents_id', 'unique_documents', ['id'], unique=False)
    op.create_table('uploaded_files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('path', sa.VARCHAR(length=2048), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('file_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('revision_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='uploaded_files_pkey')
    )
    op.create_index('ix_uploaded_files_path', 'uploaded_files', ['path'], unique=False)
    op.create_index('ix_uploaded_files_id', 'uploaded_files', ['id'], unique=False)
    op.create_table('transmittal_revisions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transmittal_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('revision_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transmittal_id'], ['transmittals.id'], name='transmittal_revisions_transmittal_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transmittal_revisions_pkey')
    )
    op.create_index('ix_transmittal_revisions_id', 'transmittal_revisions', ['id'], unique=False)
    # ### end Alembic commands ###
